[
  {
    "objectID": "project2.html",
    "href": "project2.html",
    "title": "Project 2",
    "section": "",
    "text": "# Load required libraries\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggplot2)\nlibrary(gridExtra)\n\n\nAttaching package: 'gridExtra'\n\nThe following object is masked from 'package:dplyr':\n\n    combine\n\n# Read the data\ndata &lt;- read.csv(\"C:\\\\Users\\\\upnjo\\\\OneDrive\\\\Documents\\\\Project2\\\\user_behavior_dataset.csv\")\n\n# 1. One-way contingency tables\ncat(\"One-way Contingency Tables:\\n\")\n\nOne-way Contingency Tables:\n\ncat(\"\\nDevice Model Distribution:\\n\")\n\n\nDevice Model Distribution:\n\nprint(table(data$Device.Model))\n\n\n    Google Pixel 5          iPhone 12          OnePlus 9 Samsung Galaxy S21 \n               142                146                133                133 \n      Xiaomi Mi 11 \n               146 \n\ncat(\"\\nOperating System Distribution:\\n\")\n\n\nOperating System Distribution:\n\nprint(table(data$Operating.System))\n\n\nAndroid     iOS \n    554     146 \n\ncat(\"\\nUser Behavior Class Distribution:\\n\")\n\n\nUser Behavior Class Distribution:\n\nprint(table(data$User.Behavior.Class))\n\n\n  1   2   3   4   5 \n136 146 143 139 136 \n\n# 2. Two-way contingency tables\ncat(\"\\nTwo-way Contingency Tables:\\n\")\n\n\nTwo-way Contingency Tables:\n\ncat(\"\\nDevice Model by Operating System:\\n\")\n\n\nDevice Model by Operating System:\n\nprint(table(data$Device.Model, data$Operating.System))\n\n                    \n                     Android iOS\n  Google Pixel 5         142   0\n  iPhone 12                0 146\n  OnePlus 9              133   0\n  Samsung Galaxy S21     133   0\n  Xiaomi Mi 11           146   0\n\ncat(\"\\nUser Behavior Class by Gender:\\n\")\n\n\nUser Behavior Class by Gender:\n\nprint(table(data$User.Behavior.Class, data$Gender))\n\n   \n    Female Male\n  1     63   73\n  2     64   82\n  3     82   61\n  4     67   72\n  5     60   76\n\n# 3. Numerical summaries by categorical variables\n# Function to calculate summary statistics\n# First, let's see the actual column names in your data\nnames(data)\n\n [1] \"User.ID\"                    \"Device.Model\"              \n [3] \"Operating.System\"           \"App.Usage.Time..min.day.\"  \n [5] \"Screen.On.Time..hours.day.\" \"Battery.Drain..mAh.day.\"   \n [7] \"Number.of.Apps.Installed\"   \"Data.Usage..MB.day.\"       \n [9] \"Age\"                        \"Gender\"                    \n[11] \"User.Behavior.Class\"       \n\n# Modify the function to handle column names with spaces\n# Function with correct column names\nget_summary_stats &lt;- function(data, group_var, numeric_var) {\n  data %&gt;%\n    group_by(!!sym(group_var)) %&gt;%\n    summarise(\n      Mean = mean(!!sym(numeric_var)),\n      Median = median(!!sym(numeric_var)),\n      SD = sd(!!sym(numeric_var)),\n      Min = min(!!sym(numeric_var)),\n      Max = max(!!sym(numeric_var))\n    )\n}\n\n# Print summaries using exact column names from your data\ncat(\"\\nApp Usage Time Summary by Device Model:\\n\")\n\n\nApp Usage Time Summary by Device Model:\n\nprint(get_summary_stats(data, \"Device.Model\", \"App.Usage.Time..min.day.\"))\n\n# A tibble: 5 × 6\n  Device.Model        Mean Median    SD   Min   Max\n  &lt;chr&gt;              &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt;\n1 Google Pixel 5      268.   232.  180.    34   595\n2 OnePlus 9           270.   216   183.    30   598\n3 Samsung Galaxy S21  266.   217   175.    30   593\n4 Xiaomi Mi 11        268.   217   180.    31   597\n5 iPhone 12           282.   258.  170.    32   597\n\ncat(\"\\nBattery Drain Summary by Operating System:\\n\")\n\n\nBattery Drain Summary by Operating System:\n\nprint(get_summary_stats(data, \"Operating.System\", \"Battery.Drain..mAh.day.\"))\n\n# A tibble: 2 × 6\n  Operating.System  Mean Median    SD   Min   Max\n  &lt;chr&gt;            &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt;\n1 Android          1508.  1489   820.   302  2993\n2 iOS              1590.  1538.  817.   308  2971\n\n# For other variables\ncat(\"\\nScreen Time Summary by Device Model:\\n\")\n\n\nScreen Time Summary by Device Model:\n\nprint(get_summary_stats(data, \"Device.Model\", \"Screen.On.Time..hours.day.\"))\n\n# A tibble: 5 × 6\n  Device.Model        Mean Median    SD   Min   Max\n  &lt;chr&gt;              &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 Google Pixel 5      5.08   4.75  3.10   1.1  11.8\n2 OnePlus 9           5.24   4.7   3.08   1.1  12  \n3 Samsung Galaxy S21  5.32   5     3.08   1    11.8\n4 Xiaomi Mi 11        5.29   4.9   3.15   1.1  11.9\n5 iPhone 12           5.43   5.05  2.97   1    11.9\n\ncat(\"\\nData Usage Summary by Device Model:\\n\")\n\n\nData Usage Summary by Device Model:\n\nprint(get_summary_stats(data, \"Device.Model\", \"Data.Usage..MB.day.\"))\n\n# A tibble: 5 × 6\n  Device.Model        Mean Median    SD   Min   Max\n  &lt;chr&gt;              &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt;\n1 Google Pixel 5      898.   791   644.   105  2481\n2 OnePlus 9           911.   828   621.   103  2477\n3 Samsung Galaxy S21  932.   861   646.   109  2481\n4 Xiaomi Mi 11        940.   820.  671.   102  2497\n5 iPhone 12           966.   907   625.   111  2416\n\n# 4. Visualizations\n# Plot 1: Density plot of App Usage Time by Operating System\np1 &lt;- ggplot(data, aes(x = App.Usage.Time..min.day., fill = Operating.System)) +\n  geom_density(alpha = 0.5) +\n  labs(title = \"App Usage Time Distribution by OS\",\n       x = \"Daily App Usage (minutes)\",\n       y = \"Density\") +\n  theme_minimal()\n\n# Plot 2: Scatter plot with correlation between Battery Drain and Screen Time\np2 &lt;- ggplot(data, aes(x = Screen.On.Time..hours.day., \n                       y = Battery.Drain..mAh.day., \n                       color = Operating.System)) +\n  geom_point(alpha = 0.6) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  facet_wrap(~Device.Model) +\n  labs(title = \"Battery Drain vs Screen Time by Device\",\n       x = \"Screen Time (hours/day)\",\n       y = \"Battery Drain (mAh/day)\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45))\n\n# Plot 3: Violin plot of Data Usage by User Behavior Class\np3 &lt;- ggplot(data, aes(x = as.factor(User.Behavior.Class), \n                       y = Data.Usage..MB.day., \n                       fill = Gender)) +\n  geom_violin() +\n  labs(title = \"Data Usage Distribution by User Behavior Class and Gender\",\n       x = \"User Behavior Class\",\n       y = \"Daily Data Usage (MB)\") +\n  theme_minimal()\n\n# Plot 4: Hexbin plot of App Usage vs Number of Apps\np4 &lt;- ggplot(data, aes(x = Number.of.Apps.Installed, \n                       y = App.Usage.Time..min.day.)) +\n  geom_hex(bins = 30) +\n  facet_wrap(~Operating.System) +\n  scale_fill_viridis_c() +\n  labs(title = \"App Usage vs Number of Apps Installed\",\n       x = \"Number of Apps Installed\",\n       y = \"Daily App Usage (minutes)\") +\n  theme_minimal()\n\n\n# Plot 5: Stacked bar plot of User Behavior Class distribution by Device\np5 &lt;- ggplot(data, aes(x = Device.Model, fill = as.factor(User.Behavior.Class))) +\n  geom_bar(position = \"fill\") +\n  labs(title = \"User Behavior Class Distribution by Device\",\n       x = \"Device Model\",\n       y = \"Proportion\",\n       fill = \"Behavior Class\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n# Plot 6: Age distribution by Gender and OS\np6 &lt;- ggplot(data, aes(x = Age, fill = Gender)) +\n  geom_histogram(position = \"dodge\", bins = 30, alpha = 0.7) +\n  facet_wrap(~Operating.System) +\n  labs(title = \"Age Distribution by Gender and Operating System\",\n       x = \"Age\",\n       y = \"Count\") +\n  theme_minimal()"
  }
]